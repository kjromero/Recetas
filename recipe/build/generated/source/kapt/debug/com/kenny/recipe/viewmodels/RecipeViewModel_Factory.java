// Generated by Dagger (https://dagger.dev).
package com.kenny.recipe.viewmodels;

import com.kenny.recipe.domain.usecases.GetRecipeDetailUseCase;
import com.kenny.recipe.domain.usecases.GetRecipesUseCase;
import com.kenny.recipe.usescases.MapRecipesDataToRecipeUiModelUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeViewModel_Factory implements Factory<RecipeViewModel> {
  private final Provider<GetRecipesUseCase> getRecipesUseCaseProvider;

  private final Provider<GetRecipeDetailUseCase> getRecipeDetailUseCaseProvider;

  private final Provider<MapRecipesDataToRecipeUiModelUseCase> mapRecipesDataToRecipesUiModelProvider;

  public RecipeViewModel_Factory(Provider<GetRecipesUseCase> getRecipesUseCaseProvider,
      Provider<GetRecipeDetailUseCase> getRecipeDetailUseCaseProvider,
      Provider<MapRecipesDataToRecipeUiModelUseCase> mapRecipesDataToRecipesUiModelProvider) {
    this.getRecipesUseCaseProvider = getRecipesUseCaseProvider;
    this.getRecipeDetailUseCaseProvider = getRecipeDetailUseCaseProvider;
    this.mapRecipesDataToRecipesUiModelProvider = mapRecipesDataToRecipesUiModelProvider;
  }

  @Override
  public RecipeViewModel get() {
    return newInstance(getRecipesUseCaseProvider.get(), getRecipeDetailUseCaseProvider.get(), mapRecipesDataToRecipesUiModelProvider.get());
  }

  public static RecipeViewModel_Factory create(
      Provider<GetRecipesUseCase> getRecipesUseCaseProvider,
      Provider<GetRecipeDetailUseCase> getRecipeDetailUseCaseProvider,
      Provider<MapRecipesDataToRecipeUiModelUseCase> mapRecipesDataToRecipesUiModelProvider) {
    return new RecipeViewModel_Factory(getRecipesUseCaseProvider, getRecipeDetailUseCaseProvider, mapRecipesDataToRecipesUiModelProvider);
  }

  public static RecipeViewModel newInstance(GetRecipesUseCase getRecipesUseCase,
      GetRecipeDetailUseCase getRecipeDetailUseCase,
      MapRecipesDataToRecipeUiModelUseCase mapRecipesDataToRecipesUiModel) {
    return new RecipeViewModel(getRecipesUseCase, getRecipeDetailUseCase, mapRecipesDataToRecipesUiModel);
  }
}
